-- 2.1
SELECT * FROM EMPLOYEE;
SELECT * FROM EMPLOYEE WHERE LASTNAME='KING';
SELECT * FROM EMPLOYEE WHERE FIRSTNAME='ANDREW'AND REPORTSTO IS NULL;
-- 2.2
SELECT * FROM ALBUM ORDER BY ALBUMID DESC;
SELECT FIRSTNAME FROM CUSTOMER ORDER BY CITY ASC;
-- 2.3
INSERT INTO GENRE VALUES(26,'JAZZ');
INSERT INTO GENRE VALUES(27,'SWING');
INSERT INTO EMPLOYEE VALUES(9,'EDUARDO','LASH','SITHLORD',1,'09-SEP-92','01-SEP-18','1800 CERRITO DR','GALLUP','NM','USA',87301,'(555)915-2232',,'(345)567-3244','erwasdf@ymail.com');
INSERT INTO EMPLOYEE VALUES(10,'DARTH','MALGUS','ASSASIN',1,'09-SEP-05','02-SEP-18','1230 CAREM DR','ABQ','NM','USA',97301,'(575)102-4432','(321)456-7897','sersdf@gmail.com');
-- 2.4
UPDATE CUSTOMER SET FIRSTNAME= 'Robert',LASTNAME = 'Walter' WHERE FIRSTNAME='Aaron' AND LASTNAME='Mitchell';
UPDATE ARTIST SET NAME='CCR' WHERE NAME='Creedence Clearwater Revival';
--2.5
SELECT * FROM INVOICE WHERE BILLINGADDRESS LIKE 'T%';
--2.6
SELECT * FROM INVOICE WHERE TOTAL BETWEEN 15 AND 50;
SELECT * FROM EMPLOYEE WHERE HIREDATE BETWEEN '01-JUN-03' AND '01-MAR-04';
--2.7
DELETE FROM INVOICELINE WHERE INVOICELINE.INVOICEID IN 
    (SELECT INVOICEID FROM INVOICE WHERE INVOICE.CUSTOMERID IN (SELECT CUSTOMERID FROM CUSTOMER WHERE FIRSTNAME='Robert' AND LASTNAME='Walter'));
    
SAVEPOINT S1;
--3.1
SELECT TO_CHAR(SYSDATE,'HH12:MI:SS')FROM DUAL;

SELECT LENGTH(NAME) FROM MEDIATYPE WHERE MEDIATYPEID = '1';
--3.2
SELECT AVG(INVOICEID) FROM INVOICE;
SELECT MAX(UNITPRICE) FROM TRACK;
--3.3
SELECT AVG(INVOICELINEID) FROM INVOICELINE;
--3.4
CREATE OR REPLACE TYPE EMP_BIR FORCE IS OBJECT(OLD_EMP VARCHAR2(200), B_YEAR DATE); --Create object to store data
/
CREATE OR REPLACE TYPE EMP_BORN IS TABLE OF EMP_BIR; --Create table to store emp objects
/
CREATE OR REPLACE FUNCTION B_A_D(BIRTHYEAR IN NUMBER)
RETURN EMP_BORN AS L_EMPS EMP_BORN := EMP_BORN();
N INTEGER :=0;
BEGIN
    FOR i IN (SELECT (FIRSTNAME||' '|| LASTNAME) AS EMP_NAME, BIRTHDATE AS BIRTH FROM EMPLOYEE WHERE BIRTHDATE > (TO_DATE(BIRTHYEAR,'YYYY')) )
        LOOP
        L_EMPS.EXTEND(); --Extend(): Allocates one element space.
        N:=N+1;
        L_EMPS(N) :=EMP_BIR(i.EMP_NAME,i.BIRTH);
        END LOOP;
    RETURN L_EMPS;
END;
/

SELECT * FROM TABLE(B_A_D(1968));
--4.1
CREATE OR REPLACE PROCEDURE NAME_EMP
(E OUT SYS_REFCURSOR)
IS
BEGIN
OPEN E FOR
SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
END;
/
DECLARE
E SYS_REFCURSOR;
EMP_NAME EMPLOYEE.FIRSTNAME%TYPE;
EMP_NAME2 EMPLOYEE.LASTNAME%TYPE;
BEGIN
	NAME_EMP(E);
	LOOP
	FETCH E INTO EMP_NAME,EMP_NAME2;
	EXIT WHEN E%NOTFOUND; -- BREAK OUT OF THE LOOP WHEN NO MORE ROWS ARE AVAILABLE
	DBMS_OUTPUT.PUT_LINE(EMP_NAME||' IS FIRST NAME, ' ||EMP_NAME2||' IS LAST NAME');
END LOOP
CLOSE;
END;
/

SET SERVEROUTPUT ON;
--4.2

CREATE OR REPLACE PROCEDURE UP_EMP
    (EMP_ID IN EMPLOYEE.EMPLOYEEID%TYPE, F_NAME IN EMPLOYEE.FIRSTNAME%TYPE, L_NAME IN EMPLOYEE.LASTNAME%TYPE, TIT IN TITLE%TYPE, MAN IN REPORTSTO%TYPE,
    BOD IN EMPLOYEE.BIRTHDATE%TYPE, H_DATE IN EMPLOYEE.HIREDATE%TYPE, ADDST IN EMPLOYEE.ADDRESS%TYPE, C IN EMPLOYEE.CITY%TYPE, S IN EMPLOYEE.STATE%TYPE,
    COUN IN EMPLOYEE.COUNTRY%TYPE, P_C IN EMPLOYEE.POSTALCODE%TYPE, PH IN EMPLOYEE.PHONE%TYPE, FX IN EMPLOYEE.FAX%TYPE, EMAL IN EMPLOYEE.EMAIL%TYPE);
    IS
BEGIN
UPDATE EMPLOYEE SET( EMPLOYEEID = EMP_ID, FIRSTNAME = F_NAME, LASTNAME = L_NAME, TITLE = TIT, REPOSTSTO = MAN,
    BIRTHDATE = BOD, HIREDATE = H_DATE, ADDRESS = ADDST, CITY = C, STATE = S, COUNTRY = COUN, POSTALCODE = P_C,
    PHONE = PH , FAX = FX, EMAIL = EMAL);
END;
/
SELECT FIRSTNAME||' '||LASTNAME||' ''s Address is '||ADDRESS||' '||CITY||', '||STATE||' '||POSTALCODE||' '||COUNTRY||
' with phone # '||PHONE||' and fax # '||FAX FROM EMPLOYEE WHERE EMPLOYEEID = 8;
-- SHOWS THE ADDRESS BEFORE THE CHANGE
EXECUTE UP_EMP(15,'6724 DORY RD', 'NEW YORK CITY', 'NY', 96754, 'USA', '(657) 958-2547', '(657) 453- 6512');
SELECT FIRSTNAME||' '||LASTNAME||' ''s Address is '||ADDRESS||' '||CITY||', '||STATE||' '||
POSTALCODE||' '||COUNTRY||' with phone # '||PHONE||' and fax # '||FAX FROM EMPLOYEE WHERE EMPLOYEEID = 8; -- SHOWS THE ADDRESS AFTER THE CHANGE

CREATE OR REPLACE PROCEDURE MANAGER_EMP
(R OUT SYS_REFCURSOR)
AS
BEGIN
OPEN R FOR
    SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE WHERE TITLE LIKE '% Manager %';
END MANAGER_EMP;
/
DECLARE
R SYS_REFCURSOR;
FIRSTNAME CUSTOMER.FIRSTNAME%TYPE;
LASTNAME CUSTOMER.LASTNAME%TYPE;
BEGIN
	MANAGER_EMP(R);
	LOOP
	FETCH R INTO FIRSTNAME, LASTNAME;
	EXIT WHEN R%NOTFOUND; -- BREAK OUT OF THE LOOP WHEN NO MORE ROWS ARE AVAILABLE
	DBMS_OUTPUT.PUT_LINE(FIRSTNAME||' IS FIRST NAME, ' ||LASTNAME||' IS LAST NAME');
END LOOP
CLOSE;
END;
/
SET SERVEROUTPUT ON;
--4.3
CREATE OR REPLACE PROCEDURE STOR_COMP
(F OUT SYS_REFCURSOR)
AS
BEGIN
OPEN F FOR
    SELECT COMPANY FROM CUSTOMER WHERE CUSTOMERID LIKE '% Customer %';
END STOR_COMP;
/
DECLARE
F SYS_REFCURSOR;
COMPANY CUSTOMER.COMPANY%TYPE;
BEGIN
	STOR_COMP(F);
	LOOP
	FETCH F INTO COMPANY;
	EXIT WHEN F%NOTFOUND; -- BREAK OUT OF THE LOOP WHEN NO MORE ROWS ARE AVAILABLE
	DBMS_OUTPUT.PUT_LINE(COMPANY||' COMPANY NAME ');
END LOOP
CLOSE;
END;
/
SET SERVEROUTPUT ON;

--5.0
CREATE OR REPLACE PROCEDURE GIVE_INVOICE(C_ID IN CUSTOMERID%TYPE)
 BEGIN TRANSACTION;
    SAVE TRANSACTION NEWSAVEPOINT1;
    SET C_ID = 0;
    SELECT INVOICEID FROM INVOICE WHERE CUSTOMERID = 2;
    
    DELETE FROM INVOICELINE WHERE INVOICELINE.INVOICEID IN 
        (SELECT INVOICEID FROM INVOICE WHERE INVOICE.CUSTOMERID IN (SELECT CUSTOMERID FROM CUSTOMER WHERE CUSTOMERID = C_ID);
END
    BEGIN
        ROLLBACK TRANSACTION NEWSAVEPOINT1;
    END
    COMMIT TRANSACTION
END;
/
EXECUTE  GIVE_INVOICE(2);
SELECT * FROM INVOICE;
    
CREATE OR REPLACE PROCEDURE N_RECORD
(C_ID IN CUSTOMERID%TYPE, F_NAME IN FIRSTNAME%TYPE, L_NAME IN LASTNAME%TYPE, COMPY IN COMPANY%TYPE, ADRES IN ADDRESS%TYPE, CIT IN CITY%TYPE,
S_E IN STATE%TYPE, COUN IN COUNTRY%TYPE, POS_C IN POSTALCODE%TYPE, PH IN PHONE%TYPE, F_X IN FAX, E_L IN EMAIL%TYPE, SU_ID IN SUPPORTREPID%TYPE);
IS
BEGIN
    BEGIN TRANSACTION;
    SAVE TRANSACTION FIRSTSAVEPOINT;
    SET C_ID = '60';
    SET F_NAME = 'SWING';
    SET L_NAME = 'DAVIS';
    SET COMPY = 'H&R';
    SET ADRES = '32434 Ssdts';
    SET CIT = 'SANTA FE';
    SET S_E = 'NM';
    SET COUN = 'USA';
    SET POS_C = '97856';
    SET PH = '1(543)876-4532';
    SET F_X = '(464)897-3456';
    SET E_L = 'wrtsdt@nm.edu';
    SET SU_ID = 3;
    BEGIN 
    UPDATE CUSTOMER SET( CUSTOMERID = C_ID, FIRSTNAME = F_NAME, LASTNAME = L_NAME, COMPANY = COMPY, ADDRESS = ADRES, CITY = CIT, STATE = S_E,
    COUNTRY = COMPY, POSTALCODE = POS_C, PHONE = PH, FAX = F_X, EMAIL = E_L, SUPPORTREPID = SU_ID);
    
    INSERT INTO CUSTOMER VALUES(60,'SWING','DAVIS','H&R','32434 Ssdts','SANTA FE','NM','USA','97856','1(543)876-4532','(464)897-3456','wrtsdt@nm.edu',3);
END
BEGIN
    IF SUPPORTREPID > 0
        BEGIN
            ROLLBACK TRANSACTION FIRSTSAVEPOINT;
        END
    END
    COMMIT TRANSACTION
END;
/
EXECUTE N_RECORD(60,'SWING','DAVIS','H&R','32434 Ssdts','SANTA FE','NM','USA','97856','1(543)876-4532','(464)897-3456','wrtsdt@nm.edu',3);
SELECT * FROM CUSTOMER;

--6.1
CREATE OR REPLACE TRIGGER MYTRIGGER AFTER INSERT ON EMPLOYEE
FOR EACH ROW
DECLARE
BEGIN
INSERT INTO EMPLOYEE VALUES(12,'DARTH','ULTIS','GAURD',1,'09-SEP-29','02-SEP-12','867465 CAREM DR','TOC','NM','USA',70482,'(575)102-3425','(321)456-7897','sersdf@gmail.com');
END;
/

SELECT * FROM EMPLOYEE WHERE EMPLOYEEID = '12';

CREATE OR REPLACE TRIGGER AFTER_UPDATE AFTER UPDATE ON ALBUM
FOR EACH ROW
DECLARE
BEGIN
UPDATE ALBUM SET ARTISTID = 300 WHERE ARTISTID = 104;
END;
/
SELECT ARTISTID FROM ALBUM WHERE ARTISTID = '104';

CREATE OR REPLACE TRIGGER TR_DELETE_CUSTOMER
AFTER DELETE ON CUSTOMER
   FOR EACH ROW
BEGIN
   DBMS_OUTPUT.PUT_LINE('Customer Removed!');
END TR_DELETE_CUSTOMER;
/
DELETE FROM INVOICELINE 
WHERE INVOICEID IN
   (SELECT INVOICEID FROM INVOICE ---INVOICEID IS A FK 
   WHERE CUSTOMERID =12);
DELETE FROM INVOICE
   WHERE CUSTOMERID =12;
--7.1
SELECT FIRSTNAME, LASTNAME FROM CUSTOMER INNER JOIN INVOICE ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;
--7.2
SELECT CUSTOMER.CUSTOMERID, CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, INVOICEID, TOTAL 
FROM CUSTOMER FULL OUTER JOIN INVOICE ON CUSTOMER.CUSTOMERID != INVOICE.CUSTOMERID;
--7.3
SELECT ARTIST.NAME, TITLE FROM ALBUM RIGHT JOIN ARTIST ON ALBUM.ARTISTID = ARTIST.ARTISTID;
--7.4
SELECT * FROM ALBUM CROSS JOIN ARTIST ORDER BY ARTIST.NAME ASC;
--7.5
SELECT * FROM EMPLOYEE A, EMPLOYEE B WHERE A.REPORTSTO = B.EMPLOYEEID;