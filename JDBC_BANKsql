CREATE TABLE JDBC_BANK(
MEMBER_ID INTEGER,
USERNAME VARCHAR2(20) NOT NULL,
PSSWORD VARCHAR2(20) NOT NULL,
ACCOUNT_ID INTEGER UNIQUE NOT NULL,
CONSTRAINT PKMID PRIMARY KEY(MEMBER_ID)
);

CREATE TABLE TRANSACTIONS(
MEMBER_ID INTEGER UNIQUE NOT NULL,
TRANSACTION_ID INTEGER UNIQUE NOT NULL,
TRANSACTION_NUMBER INTEGER UNIQUE NOT NULL,
ACCOUNT_ID INTEGER UNIQUE NOT NULL,
ACTION VARCHAR2(12),
AMOUNT DECIMAL(15,2)
);

CREATE TABLE ACCOUNTS(
MEMBER_ID INTEGER UNIQUE NOT NULL,
ACCOUNT_ID INTEGER UNIQUE NOT NULL,
BALANCE DECIMAL(15,2)
);






/*
SEQUENCES
*/
CREATE SEQUENCE SQ_MEMBER_ID
START WITH 0001
INCREMENT BY 1;

CREATE SEQUENCE SQ_ACCOUNTNUMBER
START WITH 227400
INCREMENT BY 1;

CREATE SEQUENCE SQ_TRANS_NUM
START WITH 0001
INCREMENT BY 1;

CREATE SEQUENCE SQ_TRANS_ID
START WITH 0001
INCREMENT BY 1;

/*
TRIGGERS
*/

CREATE OR REPLACE TRIGGER TR_NEWMEMBER
before INSERT ON JDBC_BANK
FOR EACH ROW
BEGIN
    SELECT SQ_MEMBER_ID.NEXTVAL INTO :NEW.MEMBER_ID FROM DUAL;
    SELECT SQ_ACCOUNTNUMBER.NEXTVAL INTO :NEW.ACCOUNT_ID FROM DUAL;
    
END;

CREATE OR REPLACE TRIGGER ACCT_POST
AFTER INSERT ON JDBC_BANK
FOR EACH ROW
BEGIN 
    INSERT INTO ACCOUNTS
    (MEMBER_ID,ACCOUNT_ID,BALANCE)
    VALUES
    (:NEW.MEMBER_ID,:NEW.ACCOUNT_ID,0);
END;
    
CREATE OR REPLACE TRIGGER TRANS_LOG_START
AFTER INSERT ON ACCOUNTS
FOR EACH ROW 
BEGIN
    INSERT INTO TRANSACTIONS
    (MEMBER_ID,TRANSACTION_ID,TRANSACTION_NUMBER,ACCOUNT_ID,ACTION,AMOUNT)
    VALUES
    (:NEW.MEMBER_ID,SQ_TRANS_ID.NEXTVAL,SQ_TRANS_NUM.NEXTVAL,:NEW.ACCOUNT_ID,'DEPOSIT',0);
END;

/*
FUNCTIONS
*/
CREATE OR REPLACE FUNCTION WITHDRAW
(ACCT_NUM IN NUMBER ,ACCT_BAL IN DOUBLE, W_BAL IN DOUBLE)
RETURN DOUBLE AS 
NEW_BALANCE DOUBLE(15,2);
BEGIN
SELECT BALANCE INTO NEW_BALANCE
FROM ACCOUNTS WHERE ACCOUNT_ID = ACCT_NUM;
RETURN 


/*
PROCEDURES
*/


/*
DATA
*/
INSERT INTO JDBC_BANK(USERNAME,PSSWORD) VALUES ('jakewe','tommy126');
DROP TABLE JDBC_BANK;
UPDATE TABLE ACCOUNTS WHERE USERNAME = 'ttt5 